{
  "name": "dot-component",
  "version": "0.1.1",
  "keywords": [
    "dot"
  ],
  "dependencies": {
    "type-component": "*"
  },
  "component": {
    "scripts": {
      "dot/index.js": "index.js"
    }
  },
  "devDependencies": {
    "mocha": "*",
    "expect.js": "*"
  },
  "readme": "\n# dot\n\n  MongoDB-style \"dot notation\" querying for JavaScript.\n\n## Installation\n\n```\n$ component install component/dot\n```\n\n## Example\n\n```js\nvar dot = require('dot');\nvar obj = {\n  name: {\n    first: \"tobi\"\n  },\n  pets: [\n    { id: 1, name: 'loki' },\n    { id: 2, name: 'jane' }\n  ]\n};\n\ndot.get(obj, 'name.first'); // tobi\ndot.get(obj, 'name.1.id'); // 2\ndot.parent(obj, 'name.first'); // obj.name\ndot.set(obj, 'name.1.name', 'Jane');\n```\n\n## API\n\n### get(obj, path)\n\n  Queries the given `path` in `obj`.\n\n### set(obj, path, val, init)\n\n  Sets the given `path` to `val` in obj.\n  If `init` is false it won't initialize the path if it doesn't exit.\n\n### parent(obj, path, init)\n\n  Returns the parent object/array that contains `path` within `obj`.\n  Could be `obj` itself. If `init` is true it initializes the path.\n\n## License \n\n  MIT\n",
  "readmeFilename": "Readme.md",
  "description": "MongoDB-style \"dot notation\" querying for JavaScript.",
  "_id": "dot-component@0.1.1",
  "dist": {
    "shasum": "d649cc4c872c4a155c5c9b2fcf99f94a6848b24a"
  },
  "_from": "dot-component@0.1.1",
  "_resolved": "https://registry.npmjs.org/dot-component/-/dot-component-0.1.1.tgz"
}
